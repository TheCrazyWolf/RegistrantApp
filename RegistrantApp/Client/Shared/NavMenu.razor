@using RegistrantApp.ClientApi
@using Blazored.LocalStorage
@using Newtonsoft.Json
@using RegistrantApp.Shared.PresentationLayer.Accounts
@inject RApi Api;
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigation;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Регистрант v4</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        @if (_currentUser is not null)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="security/logout">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Выход (@_currentUser.FirstName @_currentUser.MiddleName.First() @_currentUser.LastName?.First())
                </NavLink>
            </div>
        }
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="contragents">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Контрагенты
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="accounts">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Водители/Сотрудники
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="orders">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Заказы
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="orders">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Журнал аудита
            </NavLink>
        </div>

    </nav>
</div>

@code {
    private bool _collapseNavMenu = true;

    private string? NavMenuCssClass => _collapseNavMenu ? "collapse" : null;

    private ViewAccount? _currentUser;

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await WatchLogon();
        ;
    }

    private async Task WatchLogon()
    {
        var token = await LocalStorage.GetItemAsync<string>("token");

        if (token is null)
            Navigation.NavigateTo("/security/login", true);

        var responce = await Api.Accounts.GetAsync(token, 0);

        if (!responce.IsSuccessStatusCode)
            Navigation.NavigateTo("/security/login", true);

        if (responce.Content is not null)
            _currentUser = JsonConvert.DeserializeObject<ViewAccount>(responce.Content);

        StateHasChanged();
    }

}