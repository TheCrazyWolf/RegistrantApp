@page "/security/logout"
@layout SecurityLayout

@using RegistrantApp.ClientApi
@using Blazored.LocalStorage
@using RegistrantApp.Client.Shared.Other
@using RegistrantApp.Shared.Dto.Security

@inject RApi Api;
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigation;

<PageTitle>Выход из системы</PageTitle>

<div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
    <div class="text-center sm:text-left">
        <h3 class="text-lg font-medium leading-6 text-gray-900" id="modal-title">Ваш сеанс будет завершен</h3>
        <p class="mt-4 block text-xs font-medium text-gray-900">Вы будете автоматически перенаправлены на страницу авторизации</p>
    </div>
</div>

@code {


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await LogoutTask();
    }

    private async Task LogoutTask()
    {
        var token = await LocalStorage.GetItemAsync<string>("token");
        if (string.IsNullOrEmpty(token))
            Navigation.NavigateTo("/security/login", true);

        var dto = new dtoAccessTokenFinished()
        {
            DateTimeSessionFinished = DateTime.Now,
            Token = token
        };

        await Api.Security.EndSessionAsync(dto);

        await LocalStorage.RemoveItemAsync("token");
        await LocalStorage.RemoveItemAsync("tokenStart");
        await LocalStorage.RemoveItemAsync("tokenExpired");
        Navigation.NavigateTo("/security/login", true);
    }

}