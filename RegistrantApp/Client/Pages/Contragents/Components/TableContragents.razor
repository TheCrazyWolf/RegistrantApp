@using RegistrantApp.Shared.PresentationLayer.Contragents
<table class="min-w-full table-fixed divide-y divide-gray-300">
    <thead class="bg-gray-50">
    <tr>
        <th scope="col" class="relative w-12 px-6 sm:w-16 sm:px-8">
            <input type="checkbox" class="absolute left-4 top-1/2 -mt-2 h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500 sm:left-6">
        </th>
        <th scope="col" class="min-w-[12rem] py-3.5 pr-3 text-left text-sm font-semibold text-gray-900">№ ID</th>
        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Название контрагента</th>
        <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
            <span class="sr-only">Действия</span>
        </th>
    </tr>
    </thead>
    <tbody class="divide-y divide-gray-200 bg-white">
    <!-- Selected: "bg-gray-50" -->
    @foreach (var contragent in ListContragents)
    {
        <tr>
            <td class="relative w-12 px-6 sm:w-16 sm:px-8">
                <!-- Selected row marker, only show when row is selected. -->
                <div class="absolute inset-y-0 left-0 w-0.5 bg-indigo-600"></div>
                <input @onclick="args => DropToSelected(args, contragent.ContragentID)" type="checkbox" 
                       class="absolute left-4 top-1/2 -mt-2 h-4 w-4 
                    rounded border-gray-300 text-indigo-600 focus:ring-indigo-500 sm:left-6">
            </td>
            <!-- Selected: "text-indigo-600", Not Selected: "text-gray-900" -->
            <td class="whitespace-nowrap py-4 pr-3 text-sm font-medium text-gray-900">@contragent.ContragentID</td>
            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@contragent.Title</td>
            <td class="whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                <a href="#" class="text-indigo-600 hover:text-indigo-900">Редактировать</a>
            </td>
        </tr>
    }
    </tbody>
</table>

@code {

    [Parameter]
    public ICollection<ViewContragent> ListContragents { get; set; } = new List<ViewContragent>();

    private ICollection<long> selectedContragents = new List<long>();
    
    public IEnumerable<long> GetSelected()
    {
        return selectedContragents
            .ToArray();
    }

    private void DropToSelected(MouseEventArgs args, long contragentContragentId)
    {
        if (selectedContragents.Contains(contragentContragentId))
            selectedContragents.Add(contragentContragentId);
        else
            selectedContragents.Remove(contragentContragentId);
    }

}